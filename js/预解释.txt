	

	预解释（变量提升）：在当前作用域下，代码执行之前，对var或者function关键字的提前声明或定义，带var关键字的和function关键字的预解释是不一样的，
	预解释：
		1）var 关键字的是提前声明（declare）
		2）function关键字的是定义（声明+赋值）defined
		
		预解释是在页面加载之前，function里面的是字符串保存在里面，在function方法运行的时候，代码执行之前：1、形参赋值	2、预解释		3、代码从上往下执行

	
	页面加载的时候，浏览器会提供一个供js代码执行的环境-->全局作用域
	函数运行的时候，会提供一个供js代码执行的环境-->私有的作用域

	var str=“珠峰培训”
	执行步骤
		1、在代码执行之前，声明一个变量str
		2、在代码执行时，开辟一个内存空间，保存珠峰培训这个数值
		3、吧珠峰培训这个数据赋值给变量str，变量和值之间就关联起来了，这时才定义一个变量str


	var关键字
	在全局作用域下声明一个变量也相当于给window增加了一个变量 window.num但是没有赋值，所以赋值前可以调用但是会返回一个undefined

	function（分为两步：定义和执行）
		代码在执行到function的时候，因为在预解释的时候已经定义过了，所以function就会被跳过了
		function(){}只会执行到函数声明这一步，没有函数定义
			匿名函数只能作为值执行，例如 var fn=function(）{}、(function(){})、(function(){})()



	函数里私有变量：形参，私有变量（var 申明变量）
	方法运行的时候，代码执行之前：1、形参，2、预解释、3代码从上往下执行


	在function里面：1、var关键字的变量要预解释，不带var关键字的变量不需要预解释	2、var num=1；在全局作用域下定义了一个变量num=1；给window增加了一个属性 window.num=1
	num=2；仅仅是给window增加了一个属性 window.num=2


	在私有作用域中，不带var的变量称为非私有变量，去它的上级作用域查看是否有这个变量，如果有的话，则把值获取到，如果没有找到的话，一直向上查找到window作用域，如果都没有则返回undefined


	作用域链（为了执行环境里的函数或者）
	window作用域是最高级别的



	如果当前作用域下能查到这个变量，则不会往上级作用域中查找了





	1、判断不论正确与否都会预解释的

	2、方法当值存在时，是不预解释的

	3、自执行函数，定义+执行一起做了

	4、return “下面”的代码不再执行，但是要预解释
	      return  “后面”的函数不进行预解释

	5、重名变量：变量名重名只会声明一次，但是会赋值多次